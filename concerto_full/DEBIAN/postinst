#!/bin/sh
set -e # lintian wants this script to exit when there are errors

#Source debconf library.
. /usr/share/debconf/confmodule

# source dbconfig-common shell library, and call the hook function
if [ -f /usr/share/dbconfig-common/dpkg/postinst.mysql ]; then
  dbc_generate_include="template:/usr/share/concerto/config/database.yml"
  dbc_generate_include_args="-o template_infile=/usr/share/concerto/config/database.dbctemplate"
  dbc_generate_include_perms="644"
  . /usr/share/dbconfig-common/dpkg/postinst.mysql
  dbc_go concerto-full $@
fi

db_get concerto/passenger
passenger="$RET"

if [ "$passenger"  = "true" ]; then
  gem1.9.1 install --no-ri --no-rdoc passenger -v 4.0.5
  cd /var/lib/gems/1.9.1/gems/passenger-4.0.5
  rake apache2
fi

gem1.9.1 install --no-ri --no-rdoc rake bundler

#We'll leave database.yml alone if it exists already
if [ ! -f /usr/share/concerto/config/database.yml ];
then
  cp /usr/share/concerto/config/database.yml.mysql /usr/share/concerto/config/database.yml
fi
mkdir -p /usr/share/concerto/tmp
chmod -R 777 /usr/share/concerto/tmp
mkdir -p /usr/share/concerto/log 
touch /usr/share/concerto/log/production.log
chown -R www-data:www-data /usr/share/concerto
chmod 775 /usr/share/concerto/config/database.yml
chmod g+w /usr/share/concerto/log
chmod g+w /usr/share/concerto/public
#remove any old assets sitting around - Concerto will recompile
rm -rf /usr/share/concerto/public/assets

cd /usr/share/concerto
bundle install --path=vendor/bundle
RAILS_ENV=production bundle exec rake assets:precompile
# this happens implicity in the assets compile above
# RAILS_ENV=production bundle exec rake db:migrate

# migrate database before the service starts
# this should work, but fails, even when run from shell prompt
# RAILS_ENV=production rake db:migrate

a2ensite concerto
invoke-rc.d apache2 restart

update-rc.d concerto defaults
invoke-rc.d concerto start

# according to the url below, if your package uses debconf (which ours does)
# and it starts a daemon that doesn't close all inherited file descriptors
# it will make debconf hang because the debconf frontend is waiting for the
# daemon to close the fd's before continuing.  It recommends telling debconf that
# we really are done, by calling db_stop
# http://www.fifi.org/doc/debconf-doc/tutorial.html
db_stop
